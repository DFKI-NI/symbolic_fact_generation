# Specify the fact name, the module where the fact generation class resides, the fact generation class and optionally any parameters for the class constructor.
# - fact name: {module: 'module name as string', class: 'class name as string', params: [parameters for class constructor as list]}
# The class needs to have a generate_facts() method, which generates the specified facts and returns them as a List of Facts.
# 
# Examples:
# - robot_at: {module: 'symbolic_fact_generation.robot_facts_generator', class: 'RobotAtGenerator', params: []}
# - on: {module: 'symbolic_fact_generation.on_fact_generator', class: 'OnGenerator',
#        params: [['relay', 'screwdriver', 'multimeter', 'power_drill_with_grip', 'klt'],
#                 '/pick_pose_selector_node/pose_selector_class_query',
#                 '/mobipick/pick_object_node/planning_scene_boxes']}
# The robot_at fact is generated by the RobotAtGenerator class in the symbolic_fact_generation.robot_facts_generator module.
# The on fact is generated by the OnGenerator class in the symbolic_fact_generator.on_fact_generator module.
# It requires 3 parameters in its class __init__ method (class constructor), which are passed as a list.
# The signature of the __init__ method looks like this __init__(self, List, String, String).

# TABLES DEMO
facts:
  - mobipick_at: {module: 'symbolic_fact_generation.robot_facts_generator', class: 'RobotAtGenerator', params: []}
  - mobipick_has_arm_posture: {module: 'symbolic_fact_generation.robot_facts_generator', class: 'HasArmPostureGenerator', params: []}
  - on: {module: 'symbolic_fact_generation.on_fact_generator', class: 'OnGenerator', params: [['relay', 'screwdriver', 'multimeter', 'power_drill_with_grip', 'klt'], ['klt'], '/pick_pose_selector_node/pose_selector_class_query', '/mobipick/pick_object_node/planning_scene_boxes']}